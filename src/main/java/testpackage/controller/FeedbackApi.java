/**
 * NOTE: This class is auto generated by the swagger code generator program (unset).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package testpackage.controller;

import testpackage.model.ErrorResponse;
import testpackage.model.Feedback;
import testpackage.model.FeedbackInput;
import testpackage.model.SuccessfulResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-05-29T21:57:24.433Z")

@Api(value = "feedback", description = "the feedback API")
public interface FeedbackApi {

    @ApiOperation(value = "Sends feedback to the petstore, which is stored in a db for future consumption", nickname = "createFeedback", notes = "", response = SuccessfulResponse.class, tags={ "feedback", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = SuccessfulResponse.class),
        @ApiResponse(code = 400, message = "Bad Request", response = ErrorResponse.class) })
    @RequestMapping(value = "/feedback",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<SuccessfulResponse> createFeedback(@ApiParam(value = ""  )  @Valid @RequestBody FeedbackInput body);


    @ApiOperation(value = "Get all feedback which has been submitted to the petstore", nickname = "getFeedback", notes = "", response = Feedback.class, responseContainer = "List", tags={ "feedback", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Feedback.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Bad Request", response = ErrorResponse.class) })
    @RequestMapping(value = "/feedback",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Feedback>> getFeedback();

}
